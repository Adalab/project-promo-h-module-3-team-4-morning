{"version":3,"sources":["01-design.js","02-fill.js","03-share.js","04-image.js","05-collapsible.js","06-localstorage.js","07-reset.js","08-api.js","main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["\nconst colorInputArr = document.querySelectorAll('.js-input-color');\n\n\nfunction updatePalette() {\n  let color = document.querySelector('.preview__display');\n  if (colorInputArr[0].checked === true) {\n    color.classList.remove('palette1');\n    color.classList.remove('palette2');\n    color.classList.add('palette0');\n    lsObj['palette'] = colorInputArr[0].id;\n  } else if (colorInputArr[1].checked === true) {\n    color.classList.remove('palette0');\n    color.classList.remove('palette2');\n    color.classList.add('palette1');\n    lsObj['palette'] = colorInputArr[1].id;\n  } else {\n    color.classList.remove('palette0');\n    color.classList.remove('palette1');\n    color.classList.add('palette2');\n    lsObj['palette'] = colorInputArr[2].id;\n  }\n  updateLocalStorage();\n}\n\nfunction listenColors() {\n  for (let i = 0; i < colorInputArr.length; i++) {\n    colorInputArr[i].addEventListener('click', updatePalette);\n\n  }\n}\n\nlistenColors();\n","const inputArr = document.querySelectorAll('.js-input');\nconst previewArr = document.querySelectorAll('.js-preview');\nconst colorIConsCard = document.querySelectorAll('.menu__items');\nconst twitterBtn = document.querySelector('.twitter');\n\n\nconst defaultPreviewArr = [\n  'Nombre Apellido',\n  'Front-End Developer',\n  '',\n  '',\n  '',\n  '',\n];\n\nconst hrefArr = [\n  false,\n  false,\n  'mailto:',\n  'tel:+',\n  'https://www.linkedin.com/in/',\n  'https://www.github.com/',\n];\n\nfunction updatePreview() {\n  const lsArr = [];\n  for (let i = 0; i < inputArr.length; i++) {\n    if (i < 2) {\n      if (!!inputArr[i].value === false) {\n        previewArr[i].innerHTML = defaultPreviewArr[i];\n      } else {\n        previewArr[i].innerHTML = inputArr[i].value;\n      }\n    } else if (!!inputArr[i].value === false) {\n      previewArr[i].href = `${hrefArr[i]}${defaultPreviewArr[i]}`;\n      colorIConsCard[i - 2].classList.add('filter');\n    } else {\n      previewArr[i].href = `${hrefArr[i]}${inputArr[i].value}`;\n      colorIConsCard[i - 2].classList.remove('filter');\n    }\n    lsObj[inputArr[i].id] = inputArr[i].value;\n    lsArr.push(inputArr[i].value);\n  }\n  twitterBtn.classList.add('hidden');\n}\n\nfunction listenInputs() {\n  for (let i = 0; i < inputArr.length; i++) {\n    inputArr[i].addEventListener('keyup', handler);\n\n  }\n}\n\nlistenInputs();\n","const createAllowCard = document.querySelector('.js-share__btn');\nconst formValidation = document.querySelector('.js-form-container');\n\n\n\nfunction checkForm() {\n  if (formValidation.checkValidity() === true) {\n    createAllowCard.classList.remove('filter');\n  } else {\n    createAllowCard.classList.add('filter');\n  }\n}\n\nconst twitterActive = function () {\n  if (formValidation.checkValidity() === false) {\n    twitterBtn.classList.add('hidden');\n  }\n};\n\nfunction createButtonHandler(event) {\n  event.preventDefault();\n  twitterActive();\n}\ncreateAllowCard.addEventListener('click', createButtonHandler);\n","\nconst fr = new FileReader();\nconst uploadBtn = document.querySelector('.js-fill__image-btn');\nconst fileField = document.querySelector('.js-fill__image-upload-btn');\nconst profileImage = document.querySelector('.preview__display--img');\nconst profilePreview = document.querySelector('.fill__image--miniature');\nconst resetFormBtn = document.querySelector('.preview__reset');\nconst defaultImage = './assets/images/default-profile.png';\n\n\nfunction getImage(e) {\n  var myFile = e.currentTarget.files[0];\n  fr.addEventListener('load', writeImage);\n  fr.readAsDataURL(myFile);\n}\n\nfunction writeImage() {\n  if (!!fr.result === true) {\n    profileImage.style.backgroundImage = `url(${fr.result})`;\n    profilePreview.style.backgroundImage = `url(${fr.result})`;\n    lsObj['image'] = fr.result;\n    updateLocalStorage();\n  } else {\n    profileImage.style.backgroundImage = `url(${defaultImage})`;\n    profilePreview.style.backgroundImage = `url('')`;\n    lsObj['image'] = fr.result;\n  }\n}\n\nfunction fakeFileClick(e) {\n  e.preventDefault();\n  fileField.click();\n}\n\nuploadBtn.addEventListener('click', fakeFileClick);\nfileField.addEventListener('change', getImage);","/* eslint-disable no-inner-declarations */\n'use strict';\n\nconst collapsibleArr = document.querySelectorAll('.collapsible');\nconst fieldsetArr = document.querySelectorAll('fieldset');\n\nfor (let i = 0; i < collapsibleArr.length; i++) {\n  collapsibleArr[i].addEventListener('click', toggleItem);\n\n  function toggleItem() {\n    toggle(i);\n  }\n}\n\nfunction toggle(itemIndex) {\n  const sel = fieldsetArr[itemIndex];\n  const col = collapsibleArr[itemIndex];\n  const initialStatus = sel.classList.contains('hidden');\n  fieldsetArr[0].classList.add('hidden');\n  collapsibleArr[0].classList.remove('open');\n  fieldsetArr[1].classList.add('hidden');\n  collapsibleArr[1].classList.remove('open');\n  fieldsetArr[2].classList.add('hidden');\n  collapsibleArr[2].classList.remove('open');\n  if (initialStatus) {\n    sel.classList.remove('hidden');\n    col.classList.add('open');\n  } else {\n    sel.classList.add('hidden');\n    col.classList.remove('open');\n  }\n}\n","const lsObj = {\n  palette: '',\n  name: '',\n  job: '',\n  image: '',\n  email: '',\n  phone: '',\n  linkedin: '',\n  github: '',\n};\n\nfunction updateLocalStorage() {\n  localStorage.setItem('userData', JSON.stringify(lsObj));\n}\n\nfunction getFromLocalStorage() {\n  const userData = JSON.parse(localStorage.getItem('userData'));\n  if (userData !== null) {\n    inputArr[0].value = userData.name;\n    inputArr[1].value = userData.job;\n    inputArr[2].value = userData.email;\n    inputArr[3].value = userData.phone;\n    inputArr[4].value = userData.linkedin;\n    inputArr[5].value = userData.github;\n    lsObj.image = userData.image;\n    if (userData.image !== '') {\n      profileImage.style.backgroundImage = `url(${userData.image})`;\n      profilePreview.style.backgroundImage = `url(${userData.image})`;\n    }\n    updatePreview();\n    for (let i = 0; i < colorInputArr.length; i++) {\n      if (colorInputArr[i].id === userData.palette) {\n        colorInputArr[i].setAttribute('checked', 'checked');\n        updatePalette();\n      }\n    }\n    checkForm();\n  }\n}\n","\nlet form = document.querySelector('form');\n\nfunction resetForm() {\n  colorInputArr[1].removeAttribute('checked');\n  colorInputArr[2].removeAttribute('checked');\n  form.reset();\n  document.querySelector('.preview__display').classList.remove('palette1');\n  document.querySelector('.preview__display').classList.remove('palette2');\n  document.querySelector('.preview__display').classList.remove('palette3');\n  lsObj.image = '';\n  handler();\n  profileImage.style.backgroundImage = `url(${defaultImage})`;\n  profilePreview.style.backgroundImage = `url('')`;\n}\n\nresetFormBtn.addEventListener('click', resetForm);\n","const responseURL = document.querySelector('.js-response');\n\n\nfunction sendData() {\n  let inputs = Array.from(formValidation.elements);\n  let json = getJSONFromInputs(inputs);\n  json.skills = ['JavaScript', 'React'];\n  if (fr.result !== null) {\n    json.photo = fr.result;\n  } else {\n    json.photo = lsObj.image;\n  }\n  json.palette = lsObj.palette;\n  sendRequest(json);\n}\n\nfunction loadPhoto() {\n  const myFile = document.querySelector('#img-selector').files[0];\n  if (myFile !== undefined) {\n    fr.addEventListener('load', sendData);\n    fr.readAsDataURL(myFile);\n  } else {\n    sendData();\n  }\n}\n\nfunction getJSONFromInputs(inputs) {\n  return inputs.reduce(function (acc, val) {\n    if (val.nodeName !== 'BUTTON') {\n      acc[val.name] = val.value;\n    }\n    return acc;\n  }, {});\n}\n\nfunction sendRequest(json) {\n  fetch('https://us-central1-awesome-cards-cf6f0.cloudfunctions.net/card/', {\n    method: 'POST',\n    body: JSON.stringify(json),\n    headers: {\n      'content-type': 'application/json'\n    },\n  })\n    .then(function (resp) {\n      return resp.json();\n    })\n    .then(function (result) {\n      showURL(result);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nfunction showURL(result) {\n  const btnTwitter = document.querySelector('.js-button-twitter');\n  if (result.success) {\n    responseURL.innerHTML = '<a href=' + result.cardURL + '>' + result.cardURL + '</a>';\n    btnTwitter.href = 'https://twitter.com/share?text=' + 'Quiero enseñar mi tarjeta de contacto' + '&url=' + result.cardURL + '&hashtags=' + 'tarjetavisita,html,css,javascript,businesscard,card,profile';\n    twitterBtn.classList.remove('hidden');\n  } else {\n    responseURL.innerHTML = 'ERROR:' + result.error;\n  }\n}\n\ncreateAllowCard.addEventListener('click', loadPhoto);\n","'use strict';\n\nfunction handler() {\n  updateLocalStorage();\n  updatePreview();\n  updatePalette();\n  checkForm();\n}\n\ngetFromLocalStorage();\n"]}